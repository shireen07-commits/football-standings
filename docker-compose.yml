version: '3.8'

services:
  football-standings-app:
    build: .
    container_name: football-standings
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - FOOTBALL_API_KEY=${FOOTBALL_API_KEY:-9bb66184e0c8145384fd2cc0f7b914ada57b4e8fd2e4d6d586adcc27c257a978}
      - OFFLINE_MODE=${OFFLINE_MODE:-false}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
    networks:
      - football-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    
  nginx:
    image: nginx:alpine
    container_name: football-standings-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - football-standings-app
    networks:
      - football-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: football-standings-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - football-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: football-standings-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - football-network
    restart: unless-stopped

volumes:
  grafana-data:

networks:
  football-network:
    driver: bridge