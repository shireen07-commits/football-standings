# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Application Information
spring.application.name=football-standings
info.app.name=Football Standings Microservice
info.app.description=Microservice to retrieve football standings with offline support
info.app.version=1.0.0

# API Configuration
football.api.base-url=https://apifootball.com/api
football.api.key=${FOOTBALL_API_KEY:9bb66184e0c8145384fd2cc0f7b914ada57b4e8fd2e4d6d586adcc27c257a978}
football.api.timeout=30000
football.api.retry-attempts=3

# Offline Mode Configuration
football.offline.enabled=${OFFLINE_MODE:false}
football.offline.cache-duration=3600

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=1h

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# OpenAPI Documentation
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=${ADMIN_PASSWORD:admin123}
spring.security.user.roles=ADMIN

# CORS Configuration
cors.allowed-origins=http://localhost:3000,http://localhost:8080
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*

# Logging Configuration
logging.level.com.football.standings=INFO
logging.level.org.springframework.web=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n